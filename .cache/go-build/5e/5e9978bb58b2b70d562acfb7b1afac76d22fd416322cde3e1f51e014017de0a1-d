// Code generated by cmd/cgo; DO NOT EDIT.

//line /tmp/yay/src/gopath/pkg/mod/github.com/!jguer/go-alpm/v2@v2.0.2/db_five.go:1:1
// +build !six
// db.go - Functions for database handling.
//
// Copyright (c) 2013 The go-alpm Authors
//
// MIT Licensed. See LICENSE for details.

package alpm

/*
#include <alpm.h>
#include <alpm_list.h>
*/
import _ "unsafe"

import (
	"unsafe"
)

func (db *DB) Search(targets []string) IPackageList {
	var needles * /*line :21:15*/_Ctype_alpm_list_t /*line :21:28*/

	for _, str := range targets {
		needles = func() *_Ctype_struct___alpm_list_t{ _cgo0 := /*line :24:29*/needles; _cgo1 := /*line :24:38*/unsafe.Pointer(_Cfunc_CString(str)); _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo1, nil); return _Cfunc_alpm_list_add(_cgo0, _cgo1); }()
	}

	pkglist := (*list)(unsafe.Pointer(func() *_Ctype_struct___alpm_list_t{ _cgo0 := /*line :27:53*/db.ptr; _cgo1 := /*line :27:61*/needles; _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo1, nil); return _Cfunc_alpm_db_search(_cgo0, _cgo1); }()))
	func() { _cgo0 := /*line :28:19*/needles; _cgoCheckPointer(_cgo0, nil); _Cfunc_alpm_list_free(_cgo0); }()
	return PackageList{pkglist, db.handle}
}
